//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.WcfServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AlbumContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAlbumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAlbum {
            get {
                return this.IdAlbumField;
            }
            set {
                if ((this.IdAlbumField.Equals(value) != true)) {
                    this.IdAlbumField = value;
                    this.RaisePropertyChanged("IdAlbum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserLoginContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RatingContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAlbum {
            get {
                return this.IdAlbumField;
            }
            set {
                if ((this.IdAlbumField.Equals(value) != true)) {
                    this.IdAlbumField = value;
                    this.RaisePropertyChanged("IdAlbum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRating {
            get {
                return this.IdRatingField;
            }
            set {
                if ((this.IdRatingField.Equals(value) != true)) {
                    this.IdRatingField = value;
                    this.RaisePropertyChanged("IdRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IMusicServiceRest")]
    public interface IMusicServiceRest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetAlbums", ReplyAction="http://tempuri.org/IMusicServiceRest/GetAlbumsResponse")]
        WebApplication.WcfServiceReference.AlbumContract[] GetAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetAlbums", ReplyAction="http://tempuri.org/IMusicServiceRest/GetAlbumsResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.AlbumContract[]> GetAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/GetAlbumResponse")]
        WebApplication.WcfServiceReference.AlbumContract GetAlbum(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/GetAlbumResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.AlbumContract> GetAlbumAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/AddAlbumResponse")]
        string AddAlbum(WebApplication.WcfServiceReference.AlbumContract album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/AddAlbumResponse")]
        System.Threading.Tasks.Task<string> AddAlbumAsync(WebApplication.WcfServiceReference.AlbumContract album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteAlbumResponse")]
        string DeleteAlbum(int idAlbum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteAlbumResponse")]
        System.Threading.Tasks.Task<string> DeleteAlbumAsync(int idAlbum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyAlbumResponse")]
        string ModifyAlbum(WebApplication.WcfServiceReference.AlbumContract modifiedAlbumData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyAlbum", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyAlbumResponse")]
        System.Threading.Tasks.Task<string> ModifyAlbumAsync(WebApplication.WcfServiceReference.AlbumContract modifiedAlbumData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUsers", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUsersResponse")]
        WebApplication.WcfServiceReference.UserContract[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUsers", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUsersResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUser", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUserResponse")]
        WebApplication.WcfServiceReference.UserContract GetUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUser", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUserResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> GetUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUserByName", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUserByNameResponse")]
        WebApplication.WcfServiceReference.UserContract GetUserByName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetUserByName", ReplyAction="http://tempuri.org/IMusicServiceRest/GetUserByNameResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> GetUserByNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddUser", ReplyAction="http://tempuri.org/IMusicServiceRest/AddUserResponse")]
        string AddUser(WebApplication.WcfServiceReference.UserLoginContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddUser", ReplyAction="http://tempuri.org/IMusicServiceRest/AddUserResponse")]
        System.Threading.Tasks.Task<string> AddUserAsync(WebApplication.WcfServiceReference.UserLoginContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteUser", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteUserResponse")]
        string DeleteUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteUser", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyUser", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyUserResponse")]
        string ModifyUser(WebApplication.WcfServiceReference.UserLoginContract modifiedUserData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyUser", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyUserResponse")]
        System.Threading.Tasks.Task<string> ModifyUserAsync(WebApplication.WcfServiceReference.UserLoginContract modifiedUserData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/Login", ReplyAction="http://tempuri.org/IMusicServiceRest/LoginResponse")]
        WebApplication.WcfServiceReference.UserContract Login(WebApplication.WcfServiceReference.UserLoginContract loginCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/Login", ReplyAction="http://tempuri.org/IMusicServiceRest/LoginResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> LoginAsync(WebApplication.WcfServiceReference.UserLoginContract loginCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRatings", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingsResponse")]
        WebApplication.WcfServiceReference.RatingContract[] GetRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRatings", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingsResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract[]> GetRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRatingsForUser", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingsForUserResponse")]
        WebApplication.WcfServiceReference.RatingContract[] GetRatingsForUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRatingsForUser", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingsForUserResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract[]> GetRatingsForUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRating", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingResponse")]
        WebApplication.WcfServiceReference.RatingContract GetRating(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/GetRating", ReplyAction="http://tempuri.org/IMusicServiceRest/GetRatingResponse")]
        System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract> GetRatingAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddRating", ReplyAction="http://tempuri.org/IMusicServiceRest/AddRatingResponse")]
        string AddRating(WebApplication.WcfServiceReference.RatingContract rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/AddRating", ReplyAction="http://tempuri.org/IMusicServiceRest/AddRatingResponse")]
        System.Threading.Tasks.Task<string> AddRatingAsync(WebApplication.WcfServiceReference.RatingContract rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteRating", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteRatingResponse")]
        string DeleteRating(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/DeleteRating", ReplyAction="http://tempuri.org/IMusicServiceRest/DeleteRatingResponse")]
        System.Threading.Tasks.Task<string> DeleteRatingAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyRating", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyRatingResponse")]
        string ModifyRating(WebApplication.WcfServiceReference.RatingContract modifiedRatingData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicServiceRest/ModifyRating", ReplyAction="http://tempuri.org/IMusicServiceRest/ModifyRatingResponse")]
        System.Threading.Tasks.Task<string> ModifyRatingAsync(WebApplication.WcfServiceReference.RatingContract modifiedRatingData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicServiceRestChannel : WebApplication.WcfServiceReference.IMusicServiceRest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicServiceRestClient : System.ServiceModel.ClientBase<WebApplication.WcfServiceReference.IMusicServiceRest>, WebApplication.WcfServiceReference.IMusicServiceRest {
        
        public MusicServiceRestClient() {
        }
        
        public MusicServiceRestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicServiceRestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceRestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceRestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication.WcfServiceReference.AlbumContract[] GetAlbums() {
            return base.Channel.GetAlbums();
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.AlbumContract[]> GetAlbumsAsync() {
            return base.Channel.GetAlbumsAsync();
        }
        
        public WebApplication.WcfServiceReference.AlbumContract GetAlbum(string id) {
            return base.Channel.GetAlbum(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.AlbumContract> GetAlbumAsync(string id) {
            return base.Channel.GetAlbumAsync(id);
        }
        
        public string AddAlbum(WebApplication.WcfServiceReference.AlbumContract album) {
            return base.Channel.AddAlbum(album);
        }
        
        public System.Threading.Tasks.Task<string> AddAlbumAsync(WebApplication.WcfServiceReference.AlbumContract album) {
            return base.Channel.AddAlbumAsync(album);
        }
        
        public string DeleteAlbum(int idAlbum) {
            return base.Channel.DeleteAlbum(idAlbum);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAlbumAsync(int idAlbum) {
            return base.Channel.DeleteAlbumAsync(idAlbum);
        }
        
        public string ModifyAlbum(WebApplication.WcfServiceReference.AlbumContract modifiedAlbumData) {
            return base.Channel.ModifyAlbum(modifiedAlbumData);
        }
        
        public System.Threading.Tasks.Task<string> ModifyAlbumAsync(WebApplication.WcfServiceReference.AlbumContract modifiedAlbumData) {
            return base.Channel.ModifyAlbumAsync(modifiedAlbumData);
        }
        
        public WebApplication.WcfServiceReference.UserContract[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public WebApplication.WcfServiceReference.UserContract GetUser(string id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> GetUserAsync(string id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public WebApplication.WcfServiceReference.UserContract GetUserByName(string userName) {
            return base.Channel.GetUserByName(userName);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> GetUserByNameAsync(string userName) {
            return base.Channel.GetUserByNameAsync(userName);
        }
        
        public string AddUser(WebApplication.WcfServiceReference.UserLoginContract user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<string> AddUserAsync(WebApplication.WcfServiceReference.UserLoginContract user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public string DeleteUser(int idUser) {
            return base.Channel.DeleteUser(idUser);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int idUser) {
            return base.Channel.DeleteUserAsync(idUser);
        }
        
        public string ModifyUser(WebApplication.WcfServiceReference.UserLoginContract modifiedUserData) {
            return base.Channel.ModifyUser(modifiedUserData);
        }
        
        public System.Threading.Tasks.Task<string> ModifyUserAsync(WebApplication.WcfServiceReference.UserLoginContract modifiedUserData) {
            return base.Channel.ModifyUserAsync(modifiedUserData);
        }
        
        public WebApplication.WcfServiceReference.UserContract Login(WebApplication.WcfServiceReference.UserLoginContract loginCredentials) {
            return base.Channel.Login(loginCredentials);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.UserContract> LoginAsync(WebApplication.WcfServiceReference.UserLoginContract loginCredentials) {
            return base.Channel.LoginAsync(loginCredentials);
        }
        
        public WebApplication.WcfServiceReference.RatingContract[] GetRatings() {
            return base.Channel.GetRatings();
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract[]> GetRatingsAsync() {
            return base.Channel.GetRatingsAsync();
        }
        
        public WebApplication.WcfServiceReference.RatingContract[] GetRatingsForUser(string id) {
            return base.Channel.GetRatingsForUser(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract[]> GetRatingsForUserAsync(string id) {
            return base.Channel.GetRatingsForUserAsync(id);
        }
        
        public WebApplication.WcfServiceReference.RatingContract GetRating(string id) {
            return base.Channel.GetRating(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.WcfServiceReference.RatingContract> GetRatingAsync(string id) {
            return base.Channel.GetRatingAsync(id);
        }
        
        public string AddRating(WebApplication.WcfServiceReference.RatingContract rating) {
            return base.Channel.AddRating(rating);
        }
        
        public System.Threading.Tasks.Task<string> AddRatingAsync(WebApplication.WcfServiceReference.RatingContract rating) {
            return base.Channel.AddRatingAsync(rating);
        }
        
        public string DeleteRating(int idUser) {
            return base.Channel.DeleteRating(idUser);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRatingAsync(int idUser) {
            return base.Channel.DeleteRatingAsync(idUser);
        }
        
        public string ModifyRating(WebApplication.WcfServiceReference.RatingContract modifiedRatingData) {
            return base.Channel.ModifyRating(modifiedRatingData);
        }
        
        public System.Threading.Tasks.Task<string> ModifyRatingAsync(WebApplication.WcfServiceReference.RatingContract modifiedRatingData) {
            return base.Channel.ModifyRatingAsync(modifiedRatingData);
        }
    }
}
