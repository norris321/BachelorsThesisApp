//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AlbumContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAlbumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAlbum {
            get {
                return this.IdAlbumField;
            }
            set {
                if ((this.IdAlbumField.Equals(value) != true)) {
                    this.IdAlbumField = value;
                    this.RaisePropertyChanged("IdAlbum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingContract", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class RatingContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAlbum {
            get {
                return this.IdAlbumField;
            }
            set {
                if ((this.IdAlbumField.Equals(value) != true)) {
                    this.IdAlbumField = value;
                    this.RaisePropertyChanged("IdAlbum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRating {
            get {
                return this.IdRatingField;
            }
            set {
                if ((this.IdRatingField.Equals(value) != true)) {
                    this.IdRatingField = value;
                    this.RaisePropertyChanged("IdRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMusicService")]
    public interface IMusicService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetAlbums", ReplyAction="http://tempuri.org/IMusicService/GetAlbumsResponse")]
        WebApplication.ServiceReference.AlbumContract[] GetAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetAlbums", ReplyAction="http://tempuri.org/IMusicService/GetAlbumsResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.AlbumContract[]> GetAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/Login", ReplyAction="http://tempuri.org/IMusicService/LoginResponse")]
        WebApplication.ServiceReference.UserContract Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/Login", ReplyAction="http://tempuri.org/IMusicService/LoginResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetAlbum", ReplyAction="http://tempuri.org/IMusicService/GetAlbumResponse")]
        WebApplication.ServiceReference.AlbumContract GetAlbum(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetAlbum", ReplyAction="http://tempuri.org/IMusicService/GetAlbumResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.AlbumContract> GetAlbumAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddAlbum", ReplyAction="http://tempuri.org/IMusicService/AddAlbumResponse")]
        string AddAlbum(WebApplication.ServiceReference.AlbumContract album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddAlbum", ReplyAction="http://tempuri.org/IMusicService/AddAlbumResponse")]
        System.Threading.Tasks.Task<string> AddAlbumAsync(WebApplication.ServiceReference.AlbumContract album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUsers", ReplyAction="http://tempuri.org/IMusicService/GetUsersResponse")]
        WebApplication.ServiceReference.UserContract[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUsers", ReplyAction="http://tempuri.org/IMusicService/GetUsersResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUser", ReplyAction="http://tempuri.org/IMusicService/GetUserResponse")]
        WebApplication.ServiceReference.UserContract GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUser", ReplyAction="http://tempuri.org/IMusicService/GetUserResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUserByName", ReplyAction="http://tempuri.org/IMusicService/GetUserByNameResponse")]
        WebApplication.ServiceReference.UserContract GetUserByName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetUserByName", ReplyAction="http://tempuri.org/IMusicService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> GetUserByNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddUser", ReplyAction="http://tempuri.org/IMusicService/AddUserResponse")]
        string AddUser(string username, string password, string rank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddUser", ReplyAction="http://tempuri.org/IMusicService/AddUserResponse")]
        System.Threading.Tasks.Task<string> AddUserAsync(string username, string password, string rank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetRatings", ReplyAction="http://tempuri.org/IMusicService/GetRatingsResponse")]
        WebApplication.ServiceReference.RatingContract[] GetRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetRatings", ReplyAction="http://tempuri.org/IMusicService/GetRatingsResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.RatingContract[]> GetRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetRating", ReplyAction="http://tempuri.org/IMusicService/GetRatingResponse")]
        WebApplication.ServiceReference.RatingContract GetRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/GetRating", ReplyAction="http://tempuri.org/IMusicService/GetRatingResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference.RatingContract> GetRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddRating", ReplyAction="http://tempuri.org/IMusicService/AddRatingResponse")]
        string AddRating(int idUser, int idAlbum, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/AddRating", ReplyAction="http://tempuri.org/IMusicService/AddRatingResponse")]
        System.Threading.Tasks.Task<string> AddRatingAsync(int idUser, int idAlbum, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModifyUser", ReplyAction="http://tempuri.org/IMusicService/ModifyUserResponse")]
        string ModifyUser(int id, string newUsername, string newPassword, string newRank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModifyUser", ReplyAction="http://tempuri.org/IMusicService/ModifyUserResponse")]
        System.Threading.Tasks.Task<string> ModifyUserAsync(int id, string newUsername, string newPassword, string newRank);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModyifyAlbum", ReplyAction="http://tempuri.org/IMusicService/ModyifyAlbumResponse")]
        string ModyifyAlbum(int id, string newArtistname, string newAlbumname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModyifyAlbum", ReplyAction="http://tempuri.org/IMusicService/ModyifyAlbumResponse")]
        System.Threading.Tasks.Task<string> ModyifyAlbumAsync(int id, string newArtistname, string newAlbumname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModifyRating", ReplyAction="http://tempuri.org/IMusicService/ModifyRatingResponse")]
        string ModifyRating(int id, int idUser, int idAlbum, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicService/ModifyRating", ReplyAction="http://tempuri.org/IMusicService/ModifyRatingResponse")]
        System.Threading.Tasks.Task<string> ModifyRatingAsync(int id, int idUser, int idAlbum, int rating);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicServiceChannel : WebApplication.ServiceReference.IMusicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicServiceClient : System.ServiceModel.ClientBase<WebApplication.ServiceReference.IMusicService>, WebApplication.ServiceReference.IMusicService {
        
        public MusicServiceClient() {
        }
        
        public MusicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication.ServiceReference.AlbumContract[] GetAlbums() {
            return base.Channel.GetAlbums();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.AlbumContract[]> GetAlbumsAsync() {
            return base.Channel.GetAlbumsAsync();
        }
        
        public WebApplication.ServiceReference.UserContract Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public WebApplication.ServiceReference.AlbumContract GetAlbum(int id) {
            return base.Channel.GetAlbum(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.AlbumContract> GetAlbumAsync(int id) {
            return base.Channel.GetAlbumAsync(id);
        }
        
        public string AddAlbum(WebApplication.ServiceReference.AlbumContract album) {
            return base.Channel.AddAlbum(album);
        }
        
        public System.Threading.Tasks.Task<string> AddAlbumAsync(WebApplication.ServiceReference.AlbumContract album) {
            return base.Channel.AddAlbumAsync(album);
        }
        
        public WebApplication.ServiceReference.UserContract[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public WebApplication.ServiceReference.UserContract GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public WebApplication.ServiceReference.UserContract GetUserByName(string username) {
            return base.Channel.GetUserByName(username);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.UserContract> GetUserByNameAsync(string username) {
            return base.Channel.GetUserByNameAsync(username);
        }
        
        public string AddUser(string username, string password, string rank) {
            return base.Channel.AddUser(username, password, rank);
        }
        
        public System.Threading.Tasks.Task<string> AddUserAsync(string username, string password, string rank) {
            return base.Channel.AddUserAsync(username, password, rank);
        }
        
        public WebApplication.ServiceReference.RatingContract[] GetRatings() {
            return base.Channel.GetRatings();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.RatingContract[]> GetRatingsAsync() {
            return base.Channel.GetRatingsAsync();
        }
        
        public WebApplication.ServiceReference.RatingContract GetRating(int id) {
            return base.Channel.GetRating(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference.RatingContract> GetRatingAsync(int id) {
            return base.Channel.GetRatingAsync(id);
        }
        
        public string AddRating(int idUser, int idAlbum, int rating) {
            return base.Channel.AddRating(idUser, idAlbum, rating);
        }
        
        public System.Threading.Tasks.Task<string> AddRatingAsync(int idUser, int idAlbum, int rating) {
            return base.Channel.AddRatingAsync(idUser, idAlbum, rating);
        }
        
        public string ModifyUser(int id, string newUsername, string newPassword, string newRank) {
            return base.Channel.ModifyUser(id, newUsername, newPassword, newRank);
        }
        
        public System.Threading.Tasks.Task<string> ModifyUserAsync(int id, string newUsername, string newPassword, string newRank) {
            return base.Channel.ModifyUserAsync(id, newUsername, newPassword, newRank);
        }
        
        public string ModyifyAlbum(int id, string newArtistname, string newAlbumname) {
            return base.Channel.ModyifyAlbum(id, newArtistname, newAlbumname);
        }
        
        public System.Threading.Tasks.Task<string> ModyifyAlbumAsync(int id, string newArtistname, string newAlbumname) {
            return base.Channel.ModyifyAlbumAsync(id, newArtistname, newAlbumname);
        }
        
        public string ModifyRating(int id, int idUser, int idAlbum, int rating) {
            return base.Channel.ModifyRating(id, idUser, idAlbum, rating);
        }
        
        public System.Threading.Tasks.Task<string> ModifyRatingAsync(int id, int idUser, int idAlbum, int rating) {
            return base.Channel.ModifyRatingAsync(id, idUser, idAlbum, rating);
        }
    }
}
